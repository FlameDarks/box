package com.zx.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class NoteBookExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table notebook
     *
     * @mbg.generated Mon Apr 06 09:27:53 HKT 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table notebook
     *
     * @mbg.generated Mon Apr 06 09:27:53 HKT 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table notebook
     *
     * @mbg.generated Mon Apr 06 09:27:53 HKT 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notebook
     *
     * @mbg.generated Mon Apr 06 09:27:53 HKT 2020
     */
    public NoteBookExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notebook
     *
     * @mbg.generated Mon Apr 06 09:27:53 HKT 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notebook
     *
     * @mbg.generated Mon Apr 06 09:27:53 HKT 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notebook
     *
     * @mbg.generated Mon Apr 06 09:27:53 HKT 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notebook
     *
     * @mbg.generated Mon Apr 06 09:27:53 HKT 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notebook
     *
     * @mbg.generated Mon Apr 06 09:27:53 HKT 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notebook
     *
     * @mbg.generated Mon Apr 06 09:27:53 HKT 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notebook
     *
     * @mbg.generated Mon Apr 06 09:27:53 HKT 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notebook
     *
     * @mbg.generated Mon Apr 06 09:27:53 HKT 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notebook
     *
     * @mbg.generated Mon Apr 06 09:27:53 HKT 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notebook
     *
     * @mbg.generated Mon Apr 06 09:27:53 HKT 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table notebook
     *
     * @mbg.generated Mon Apr 06 09:27:53 HKT 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andNotebookIdIsNull() {
            addCriterion("notebook_id is null");
            return (Criteria) this;
        }

        public Criteria andNotebookIdIsNotNull() {
            addCriterion("notebook_id is not null");
            return (Criteria) this;
        }

        public Criteria andNotebookIdEqualTo(Integer value) {
            addCriterion("notebook_id =", value, "notebookId");
            return (Criteria) this;
        }

        public Criteria andNotebookIdNotEqualTo(Integer value) {
            addCriterion("notebook_id <>", value, "notebookId");
            return (Criteria) this;
        }

        public Criteria andNotebookIdGreaterThan(Integer value) {
            addCriterion("notebook_id >", value, "notebookId");
            return (Criteria) this;
        }

        public Criteria andNotebookIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("notebook_id >=", value, "notebookId");
            return (Criteria) this;
        }

        public Criteria andNotebookIdLessThan(Integer value) {
            addCriterion("notebook_id <", value, "notebookId");
            return (Criteria) this;
        }

        public Criteria andNotebookIdLessThanOrEqualTo(Integer value) {
            addCriterion("notebook_id <=", value, "notebookId");
            return (Criteria) this;
        }

        public Criteria andNotebookIdIn(List<Integer> values) {
            addCriterion("notebook_id in", values, "notebookId");
            return (Criteria) this;
        }

        public Criteria andNotebookIdNotIn(List<Integer> values) {
            addCriterion("notebook_id not in", values, "notebookId");
            return (Criteria) this;
        }

        public Criteria andNotebookIdBetween(Integer value1, Integer value2) {
            addCriterion("notebook_id between", value1, value2, "notebookId");
            return (Criteria) this;
        }

        public Criteria andNotebookIdNotBetween(Integer value1, Integer value2) {
            addCriterion("notebook_id not between", value1, value2, "notebookId");
            return (Criteria) this;
        }

        public Criteria andNotebookTitleIsNull() {
            addCriterion("notebook_title is null");
            return (Criteria) this;
        }

        public Criteria andNotebookTitleIsNotNull() {
            addCriterion("notebook_title is not null");
            return (Criteria) this;
        }

        public Criteria andNotebookTitleEqualTo(String value) {
            addCriterion("notebook_title =", value, "notebookTitle");
            return (Criteria) this;
        }

        public Criteria andNotebookTitleNotEqualTo(String value) {
            addCriterion("notebook_title <>", value, "notebookTitle");
            return (Criteria) this;
        }

        public Criteria andNotebookTitleGreaterThan(String value) {
            addCriterion("notebook_title >", value, "notebookTitle");
            return (Criteria) this;
        }

        public Criteria andNotebookTitleGreaterThanOrEqualTo(String value) {
            addCriterion("notebook_title >=", value, "notebookTitle");
            return (Criteria) this;
        }

        public Criteria andNotebookTitleLessThan(String value) {
            addCriterion("notebook_title <", value, "notebookTitle");
            return (Criteria) this;
        }

        public Criteria andNotebookTitleLessThanOrEqualTo(String value) {
            addCriterion("notebook_title <=", value, "notebookTitle");
            return (Criteria) this;
        }

        public Criteria andNotebookTitleLike(String value) {
            addCriterion("notebook_title like", value, "notebookTitle");
            return (Criteria) this;
        }

        public Criteria andNotebookTitleNotLike(String value) {
            addCriterion("notebook_title not like", value, "notebookTitle");
            return (Criteria) this;
        }

        public Criteria andNotebookTitleIn(List<String> values) {
            addCriterion("notebook_title in", values, "notebookTitle");
            return (Criteria) this;
        }

        public Criteria andNotebookTitleNotIn(List<String> values) {
            addCriterion("notebook_title not in", values, "notebookTitle");
            return (Criteria) this;
        }

        public Criteria andNotebookTitleBetween(String value1, String value2) {
            addCriterion("notebook_title between", value1, value2, "notebookTitle");
            return (Criteria) this;
        }

        public Criteria andNotebookTitleNotBetween(String value1, String value2) {
            addCriterion("notebook_title not between", value1, value2, "notebookTitle");
            return (Criteria) this;
        }

        public Criteria andNotebookContentIsNull() {
            addCriterion("notebook_content is null");
            return (Criteria) this;
        }

        public Criteria andNotebookContentIsNotNull() {
            addCriterion("notebook_content is not null");
            return (Criteria) this;
        }

        public Criteria andNotebookContentEqualTo(String value) {
            addCriterion("notebook_content =", value, "notebookContent");
            return (Criteria) this;
        }

        public Criteria andNotebookContentNotEqualTo(String value) {
            addCriterion("notebook_content <>", value, "notebookContent");
            return (Criteria) this;
        }

        public Criteria andNotebookContentGreaterThan(String value) {
            addCriterion("notebook_content >", value, "notebookContent");
            return (Criteria) this;
        }

        public Criteria andNotebookContentGreaterThanOrEqualTo(String value) {
            addCriterion("notebook_content >=", value, "notebookContent");
            return (Criteria) this;
        }

        public Criteria andNotebookContentLessThan(String value) {
            addCriterion("notebook_content <", value, "notebookContent");
            return (Criteria) this;
        }

        public Criteria andNotebookContentLessThanOrEqualTo(String value) {
            addCriterion("notebook_content <=", value, "notebookContent");
            return (Criteria) this;
        }

        public Criteria andNotebookContentLike(String value) {
            addCriterion("notebook_content like", value, "notebookContent");
            return (Criteria) this;
        }

        public Criteria andNotebookContentNotLike(String value) {
            addCriterion("notebook_content not like", value, "notebookContent");
            return (Criteria) this;
        }

        public Criteria andNotebookContentIn(List<String> values) {
            addCriterion("notebook_content in", values, "notebookContent");
            return (Criteria) this;
        }

        public Criteria andNotebookContentNotIn(List<String> values) {
            addCriterion("notebook_content not in", values, "notebookContent");
            return (Criteria) this;
        }

        public Criteria andNotebookContentBetween(String value1, String value2) {
            addCriterion("notebook_content between", value1, value2, "notebookContent");
            return (Criteria) this;
        }

        public Criteria andNotebookContentNotBetween(String value1, String value2) {
            addCriterion("notebook_content not between", value1, value2, "notebookContent");
            return (Criteria) this;
        }

        public Criteria andNotebookTimeIsNull() {
            addCriterion("notebook_time is null");
            return (Criteria) this;
        }

        public Criteria andNotebookTimeIsNotNull() {
            addCriterion("notebook_time is not null");
            return (Criteria) this;
        }

        public Criteria andNotebookTimeEqualTo(Date value) {
            addCriterion("notebook_time =", value, "notebookTime");
            return (Criteria) this;
        }

        public Criteria andNotebookTimeNotEqualTo(Date value) {
            addCriterion("notebook_time <>", value, "notebookTime");
            return (Criteria) this;
        }

        public Criteria andNotebookTimeGreaterThan(Date value) {
            addCriterion("notebook_time >", value, "notebookTime");
            return (Criteria) this;
        }

        public Criteria andNotebookTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("notebook_time >=", value, "notebookTime");
            return (Criteria) this;
        }

        public Criteria andNotebookTimeLessThan(Date value) {
            addCriterion("notebook_time <", value, "notebookTime");
            return (Criteria) this;
        }

        public Criteria andNotebookTimeLessThanOrEqualTo(Date value) {
            addCriterion("notebook_time <=", value, "notebookTime");
            return (Criteria) this;
        }

        public Criteria andNotebookTimeIn(List<Date> values) {
            addCriterion("notebook_time in", values, "notebookTime");
            return (Criteria) this;
        }

        public Criteria andNotebookTimeNotIn(List<Date> values) {
            addCriterion("notebook_time not in", values, "notebookTime");
            return (Criteria) this;
        }

        public Criteria andNotebookTimeBetween(Date value1, Date value2) {
            addCriterion("notebook_time between", value1, value2, "notebookTime");
            return (Criteria) this;
        }

        public Criteria andNotebookTimeNotBetween(Date value1, Date value2) {
            addCriterion("notebook_time not between", value1, value2, "notebookTime");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table notebook
     *
     * @mbg.generated do_not_delete_during_merge Mon Apr 06 09:27:53 HKT 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table notebook
     *
     * @mbg.generated Mon Apr 06 09:27:53 HKT 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}